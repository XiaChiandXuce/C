//#include<stdio.h>
//
//int max(int a, int b) {
//	if (a >= b) {
//		return a;
//	}
//	else if(a < b)
//	{
//		return b;
//	}
//	//问题出现了如果等于怎么办？问题2：如何处理比较大小函数相等问题
//}//问题2的解答：我们采取大于等于返回a因为相等所以返回哪一个都可以，否则返回b的风格
//
//
//int main()
//{
//	int a = 10,b = 2,max = 0;
//	max = max(a, b);//这里报错了为什么呢？
//	//问题3：调用自定义max函数出错问题
//	// 关于问题3的解答:因为定义变量名时和函数名冲突,其实对于命名冲突学过编译原理就知道为什么了因为词法分析和语法分析时遇到歧义就会不知道执行哪一个代码，
//	//疑问
//	//疑问1：如果此时我调用了algorithm库同时自定义了一个max然后同时执行上面的语句那么会调用库函数还是自己的自定义函数。
//	//对疑问1的解答：在 C++ 中，如果你包含了 <algorithm> 库，同时定义了一个同名的 max 函数，编译器会根据函数的作用域规则优先调用你自定义的函数。在这种情况下，如果你想调用标准库中的 max 函数，可以使用 std::max。
//	printf("%d", max);//找到问题了注意了以后改变量名的时候要改为max1后这个也要改max―>max1
//	return 0;
//}
//我的改正答案
#include<stdio.h>

int max(int a, int b) {
	if (a >= b) {
		return a;
	}
	else if (a < b)
	{
		return b;
	}
	//问题出现了如果等于怎么办？问题2：如何处理比较大小函数相等问题
}//问题2的解答：我们采取大于等于返回a因为相等所以返回哪一个都可以，否则返回b的风格


int main()
{
	int a = 10, b = 2, max1 = 0;
	max1 = max(a, b);//这里报错了为什么呢？
	//问题3：调用自定义max函数出错问题
	// 关于问题3的解答:因为定义变量名时和函数名冲突,其实对于命名冲突学过编译原理就知道为什么了因为词法分析和语法分析时遇到歧义就会不知道执行哪一个代码，
	//疑问
	//疑问1：如果此时我调用了algorithm库同时自定义了一个max然后同时执行上面的语句那么会调用库函数还是自己的自定义函数。
	//对疑问1的解答：在 C++ 中，如果你包含了 <algorithm> 库，同时定义了一个同名的 max 函数，编译器会根据函数的作用域规则优先调用你自定义的函数。在这种情况下，如果你想调用标准库中的 max 函数，可以使用 std::max。
	printf("%d", max1);//找到问题了注意了以后改变量名的时候要改为max1后这个也要改max―>max1
	return 0;
}


////正确答案
//#include<stdio.b>
////主函数
//int main()
////定义主函数//主函数体开始
//(
//	int max(intx, int y);
////对被调用函数max的声明//定义变量a,b,c//输入变量a和b的值
//	int a,b,c
//	scanf("%d,%d", 8 - a, 8 - b);
//	c = max(a, b);
////调用max函数，将得到的值赋给c//输出c的值//返回函数值为0//主函数体结束
//	printf("max=%d\n", c);
//	return 0:
//
////求两个整数中的较大者的max函数
//	int max(int x, int y)
////定义max函数，函数值为整型，形式参数x和y为整型
//(
//	int z;
////max函数中的声明部分，定义本函数中用到的变量z为整型
//if (x > y)z = x;
////若x>y成立，将x的值赋给变量z
//	clse z = y;
////否则(即x>y不成立),将y的值赋给变量z
//	return(z);
////将z的值作为max函数值，返回到调用max函数的位置
//)